App As appinfo:
    BackEnabled: =true
    Formulas: =
    Theme: =SharePointTheme

    Host As hostControl.DefaultHostControlVariant:
        OnCancel: =false
        OnEdit: =false
        OnNew: =false
        OnSave: =false
        OnView: =false

    SharePointIntegration As hostControl.SharePointHostControlVariant:
        DataSource: =[@'Quality Problem Status']
        OnCancel: =ResetForm(frmQPS)
        OnEdit: |-
            =//  Reset
            Set(Process1DisplayFlag, true);         //  Process1の表示フラグ
            Set(Process2DisplayFlag, false);        //  Process2の表示フラグ
            Set(Process3DisplayFlag, false);        //  Process3の表示フラグ
            
            //  EditMode
            EditForm(frmQPS);
            Set(IntMode ,FormMode.Edit);
            
            Set(Process1DisplayFlag, !IsBlank(SharePointIntegration.Selected.'Process1 RC Process'));
            Set(Process2DisplayFlag, !IsBlank(SharePointIntegration.Selected.'Process2 RC Process'));
            Set(Process3DisplayFlag, !IsBlank(SharePointIntegration.Selected.'Process3 RC Process'));
            Set(strSite, SharePointIntegration.Selected.Site);
        OnNew: |+
            =//  NewMode
            NewForm(frmQPS);
            Set(IntMode ,FormMode.New);
            
            Set(Process1DisplayFlag, true);         //  Process1の表示フラグ
            Set(Process2DisplayFlag, true);         //  Process2の表示フラグ
            Set(Process3DisplayFlag, true);         //  Process3の表示フラグ
            Set(strSite, Blank());                  //  Site
            
        OnSave: |-
            =// フラグ初期化
            Set(gvErrorFlag, false);                //  エラーフラグ
            Set(gvErrMsg, Blank());                 //  エラーメッセージ
            Set(gvConfirmFlag, false);              //  確認PopUpの表示・非表示フラグ
            Set(gvErrCount, 0);                     //  エラーカウンター
            Set(gvCloseMail, false);                //  Closeメール送信フラグ
            Set(strSite, ddlSite.Selected.Value);   //  Site
            
            //  入力チェック
            With(
                // 入力データ取得 
                {strClaimDescription:rdbClaimDescriptionType.Selected.Value,    //  Claim Description Type
                 strCustomer:ddlCustomer.Selected.Customer,                     //  Customer
                 strMediaProgram:cmbMediaProgram.Selected.Value,                //  Media Program
                 strP1Process:ddlP1RCProcess.Selected.Process,                  //  Process 1 の Process
                 strP1ActualCause:cmbP1RCActualCause.Selected.Value},           //  Process 1 の Actual Cause
                
                If(
                    IsBlank(strSite),
                        Set(gvErrMsg, "Please select a Site！"),
                    IsBlank(strClaimDescription),
                        Set(gvErrMsg, If(!IsBlank(gvErrMsg), Concatenate(gvErrMsg, Char(10))) & "Please select a Claim description！"),
                    IsBlank(strCustomer),
                        Set(gvErrMsg, If(!IsBlank(gvErrMsg), Concatenate(gvErrMsg, Char(10))) & "Please select a Customer！"),
                    IsBlank(strMediaProgram),
                        Set(gvErrMsg, If(!IsBlank(gvErrMsg), Concatenate(gvErrMsg, Char(10))) & "Please select a Media Program！"),
                    IsBlank(strP1Process),
                        Set(gvErrMsg, If(!IsBlank(gvErrMsg), Concatenate(gvErrMsg, Char(10))) & "Please select a Process1 Process！"),
                    IsBlank(strP1ActualCause),
                        Set(gvErrMsg, If(!IsBlank(gvErrMsg), Concatenate(gvErrMsg, Char(10))) & "Please select a Process1 Actual cause！")
                );
                //  エラーメッセージがあれば表示してエラーフラグ=ON
                If(!IsBlank(gvErrMsg),
                    Notify(gvErrMsg, NotificationType.Warning);
                    Set(gvErrorFlag, true)
                );
            
                //  Close状態チェック（入力のあるProcess（1～3）の Implementation Date が （CA）internal、（CA）customer の両方に入力がある）
                With(
                    {P1:If(!IsBlank(strP1Process) && !IsBlank(datP1CAIImplementationDate.SelectedDate) && !IsBlank(datP1CACImplementationDate.SelectedDate), true, false),
                     P2:If(IsBlank(ddlP2RCProcess.Selected.Process), true, 
                            If(!IsBlank(datP2CAIImplementationDate.SelectedDate) && !IsBlank(datP2CACImplementationDate.SelectedDate), true, false)
                     ),
                     P3:If(IsBlank(ddlP3RCProcess.Selected.Process), true, 
                            If(!IsBlank(datP3CAIImplementationDate.SelectedDate) && !IsBlank(datP3CACImplementationDate.SelectedDate), true, false)
                     )
                    },
            
                    //  Status 設定
                    Set(strStatus, If(P1 && P2 && P3, "Close", "Open"));
                )
            );
            
            //  エラーがなければ保存処理
            If(!gvErrorFlag,
                SubmitForm(frmQPS)
            )
        OnView: |
            =//  Reset
            Set(Process1DisplayFlag, true);         //  Process1の表示フラグ
            Set(Process2DisplayFlag, false);        //  Process2の表示フラグ
            Set(Process3DisplayFlag, false);        //  Process3の表示フラグ
            
            //  VierMode
            ViewForm(frmQPS);
            Set(IntMode ,FormMode.View);
            
            Set(Process1DisplayFlag, !IsBlank(SharePointIntegration.Selected.'Process1 RC Process'));
            Set(Process2DisplayFlag, !IsBlank(SharePointIntegration.Selected.'Process2 RC Process'));
            Set(Process3DisplayFlag, !IsBlank(SharePointIntegration.Selected.'Process3 RC Process'));
            Set(strSite, SharePointIntegration.Selected.Site);
        SelectedHidden: =LookUp([@'Quality Problem Status'], ID = Self.SelectedListItemID)

